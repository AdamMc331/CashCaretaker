plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
    id "org.jlleitschuh.gradle.ktlint"
    id "io.gitlab.arturbosch.detekt"
    id "com.google.gms.google-services"
}

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]

    defaultConfig {
        applicationId "com.androidessence.cashcaretaker"
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode 13
        versionName "2.2.0"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    dataBinding {
        enabled = true
    }
    packagingOptions {
        exclude "META-INF/atomicfu.kotlin_module"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation(project(":database"))
    implementation(project(":analytics"))

    // Kotlin/Android
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"
    annotationProcessor "androidx.databinding:databinding-compiler:$build_tools_version"
    kapt "androidx.databinding:databinding-compiler:$build_tools_version"

    // Third party
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.androidessence:materialdesignspecs:$materialDesignSpecsVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$androidxArchVersion"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    implementation "org.koin:koin-core:$koinVersion"
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-android-viewmodel:$koinVersion"
    testImplementation "org.koin:koin-test:$koinVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "androidx.arch.core:core-testing:$androidxArchVersion"
    androidTestImplementation "androidx.test:core:$androidxTestVersion"
    androidTestImplementation "androidx.test:runner:$androidxTestVersion"
    androidTestImplementation "androidx.test:rules:$androidxTestVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"

    compileOnly "org.glassfish:javax.annotation:10.0-b28"
}
repositories {
    mavenCentral()
}

ktlint {
    ktlint.version = "0.37.2"
    android = true
    enableExperimentalRules = true
    reporters {
        reporter "plain"
        reporter "checkstyle"
    }
    additionalEditorconfigFile = file("${project.projectDir}/.editorConfig")
    outputColorName = "RED"
}

detekt {
    config = files("${rootProject.projectDir}/config/detekt/detekt.yml")

    reports {
        txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files
    }
}
