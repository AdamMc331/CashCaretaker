// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "com.github.ben-manes.versions"
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "io.gitlab.arturbosch.detekt"

buildscript {
    ext.kotlin_version = "1.4.32"
    ext.build_tools_version = '7.0.0-alpha14'
    repositories {
        jcenter()
        maven { url "https://maven.google.com" }
        maven { url "https://plugins.gradle.org/m2/" }
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$build_tools_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.38.0"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.0.0"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.16.0"
        classpath "com.google.gms:google-services:4.3.5"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://maven.google.com" }
    }

    ext {
        androidMinSdkVersion = 19
        androidTargetSdkVersion = 29
        androidCompileSdkVersion = 29

        appCompatVersion = "1.2.0"
        lifecycleVersion = "2.3.1"
        coroutinesVersion = "1.4.3"
        architectureComponentsVersion = "2.1.0"
        materialVersion = "1.3.0"
        espressoVersion = "3.3.0"
        constraintLayoutVersion = "2.0.4"
        timberVersion = "4.7.1"
        koinVersion = "2.2.2"
        androidxArchVersion = "2.1.0"
        androidxTestVersion = "1.3.0"
        androidxJunitVersion = "1.1.2"
        junitVersion = "4.13.2"
        mockkVersion = "1.11.0"
        truthVersion = "1.1.2"
        androidxCoreVersion = "1.3.2"
        turbineVersion = "0.4.1"
        kielVersion = "1.2.1"
    }
    configurations.all {
        resolutionStrategy {
            force "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
        }
    }
}

subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: "io.gitlab.arturbosch.detekt"

    ktlint {
        ktlint.version = "0.40.0"
        android = true
        enableExperimentalRules = true
        reporters {
            reporter "plain"
            reporter "checkstyle"
        }
        additionalEditorconfigFile = file("${project.projectDir}/.editorConfig")
        outputColorName = "RED"
    }

    detekt {
        config = files("${rootProject.projectDir}/config/detekt/detekt.yml")

        reports {
            txt.enabled = true
            // similar to the console output, contains issue signature to manually edit baseline files
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    gradleReleaseChannel = "current"

    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

/**
 * This is a special task that allows us to pass a flag to avoid any tasks with Lint in the name.
 *
 * To use, you can call `./gradlew build -PnoLint` from the command line.
 *
 * https://kousenit.org/2016/04/20/excluding-gradle-tasks-with-a-name-pattern/
 */
gradle.taskGraph.whenReady { graph ->
    if (project.hasProperty('noLint')) {
        graph.allTasks.findAll { it.name ==~ /.*lint.*/ }*.enabled = false
    }
}